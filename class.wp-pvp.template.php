<?php
defined('WP_PVP_VERSION') or exit('No direct script access allowed');

class WP_PVP_Template
{
    private static $initiated = false;
    private static $count_post_ID = 0;

    public static function init()
    {
        if (!self::$initiated) {
            self::$initiated = true;

            add_action('wp_head', [__CLASS__, 'wp_head'], 1);

            include_once(WP_PVP_PLUGIN_DIR . 'function.wp-pvp.template.php');
        }
    }

    public static function wp_head()
    {
        global $post;
        if (is_int($post)) {
            $post = get_post($post);
        }
        if ($post !== null) {
            if (is_singular()) {
                self::$count_post_ID = $post->ID;
            }

            if (defined('WP_CACHE') && WP_CACHE) {
                wp_enqueue_script('jquery');
                add_action('wp_footer', [__CLASS__, 'wp_footer'], 20);
            } else {
                WP_PVP::add_views($post->ID);
            }
        }
    }

    public static function wp_footer()
    {
        if (defined('WP_CACHE') && WP_CACHE) {
            ?>
<!-- Start Generated By WP-PostViews Plus -->
<script>
	jQuery(document).ready(function($) {
		jQuery.get(
			'<?php echo(admin_url("admin-ajax.php")) ?>', {
				action: 'wp_pvp_count',
				post_id: <?php echo(self::$count_post_ID) ?> ,
				count_id: '<?php echo(md5($_SERVER['REQUEST_URI'])) ?>'
			},
			function(Jdata) {
				if (Object.keys(Jdata).length > 0) {
					for (key in Jdata) {
						jQuery('.' + key).text(Jdata[key]);
					}
				}
			},
			'json'
		);
	});

</script>
<!-- End Generated WP-PostViews Plus -->
<?php
        }
    }

    public static function should_views_display()
    {
        $display_option = 0;

        if (is_home()) {
            if (isset(WP_PVP::$options['display_home'])) {
                $display_option = WP_PVP::$options['display_home'];
            }
        } elseif (is_single()) {
            if (isset(WP_PVP::$options['display_single'])) {
                $display_option = WP_PVP::$options['display_single'];
            }
        } elseif (is_page()) {
            if (isset(WP_PVP::$options['display_page'])) {
                $display_option = WP_PVP::$options['display_page'];
            }
        } elseif (is_archive()) {
            if (isset(WP_PVP::$options['display_archive'])) {
                $display_option = WP_PVP::$options['display_archive'];
            }
        } elseif (is_search()) {
            if (isset(WP_PVP::$options['display_search'])) {
                $display_option = WP_PVP::$options['display_search'];
            }
        } else {
            if (isset(WP_PVP::$options['display_other'])) {
                $display_option = WP_PVP::$options['display_other'];
            }
        }

        return (($display_option == 0) || (($display_option == 1) && is_user_logged_in()));
    }

    public static function single_template_replace($template, $type, $post_ID, $post_views)
    {
        if (defined('WP_CACHE') && WP_CACHE) {
            WP_PVP::add_cache_stats('tv', $post_ID);
            switch ($type) {
                case 'user':
                    $template = str_replace('%VIEW_COUNT%', '<span class="wppvp_tuv_' . $post_ID . '">%VIEW_COUNT%</span>', $template);
                    break;
                case 'bot':
                    $template = str_replace('%VIEW_COUNT%', '<span class="wppvp_tbv_' . $post_ID . '">%VIEW_COUNT%</span>', $template);
                    break;
                case 'both':
                default:
                    $template = str_replace('%VIEW_COUNT%', '<span class="wppvp_tv_' . $post_ID . '">%VIEW_COUNT%</span>', $template);
                    break;
            }
            $template = str_replace('%VIEW_COUNT%', '', $template);
        } else {
            $template = str_replace('%VIEW_COUNT%', number_format_i18n($post_views), $template);
        }
        return $template;
    }

    public static function list_template_replace($template, $post, $chars, $thumbnail_width, $thumbnail_height, $with_bot)
    {
        $post_views = intval($post->views);
        $post_title = isset($post->post_title) ? $post->post_title : '';
        if ($chars > 0) {
            $post_title = self::snippet_text($post_title, $chars);
        }

        $thumbnail = '';
        if (current_theme_supports('post-thumbnails')) {
            if (post_type_supports($post->post_type, 'thumbnail')) {
                if ($thumbnail_width > 0 || $thumbnail_height > 0) {
                    $thumbnail = get_the_post_thumbnail($post->ID, array($thumbnail_width, $thumbnail_height));
                } else {
                    $thumbnail = get_the_post_thumbnail($post->ID);
                }
            }
        }
        $post_excerpt = self::post_excerpt($post->post_excerpt, $post->post_content, $post->post_password, $chars);
        $temp = stripslashes($template);
        $temp = self::single_template_replace($temp, ($with_bot ? 'both' : 'user'), $post->ID, $post_views);
        $temp = str_replace("%POST_TITLE%", $post_title, $temp);
        $temp = str_replace("%POST_EXCERPT%", $post_excerpt, $temp);
        $temp = str_replace("%POST_CONTENT%", $post->post_content, $temp);
        $temp = str_replace("%POST_DATE%", mysql2date(get_option('date_format'), $post->post_date), $temp);
        $temp = str_replace("%POST_URL%", get_permalink($post->ID), $temp);
        $temp = str_replace("%POST_THUMBNAIL%", $thumbnail, $temp);
        return $temp;
    }

    public static function post_excerpt($post_excerpt, $post_content, $post_password, $chars = 200)
    {
        if (!empty($post_password)) {
            if (!isset($_COOKIE['wp-postpass_'.COOKIEHASH]) || $_COOKIE['wp-postpass_'.COOKIEHASH] != $post_password) {
                return __('There is no excerpt because this is a protected post.', 'wp-postviews-plus');
            }
        }
        if (empty($post_excerpt)) {
            return WP_PVP_Template::snippet_text(strip_tags($post_content), $chars);
        } else {
            return $post_excerpt;
        }
    }

    public static function snippet_text($text, $length = 0)
    {
        if (defined('MB_OVERLOAD_STRING')) {
            $text = @html_entity_decode($text, ENT_QUOTES, get_option('blog_charset'));
            return htmlentities(mb_strimwidth($text, 0, $length, '...'), ENT_COMPAT, get_option('blog_charset'));
        } else {
            $text = @html_entity_decode($text, ENT_QUOTES, get_option('blog_charset'));
            if (strlen($text) > $length) {
                return htmlentities(substr($text, 0, $length), ENT_COMPAT, get_option('blog_charset')) . '...';
            } else {
                return htmlentities($text, ENT_COMPAT, get_option('blog_charset'));
            }
        }
    }
}

WP_PVP_Template::init();
